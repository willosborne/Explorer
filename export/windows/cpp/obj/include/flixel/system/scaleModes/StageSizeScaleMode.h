// Generated by Haxe 3.4.5
#ifndef INCLUDED_flixel_system_scaleModes_StageSizeScaleMode
#define INCLUDED_flixel_system_scaleModes_StageSizeScaleMode

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_system_scaleModes_BaseScaleMode
#include <flixel/system/scaleModes/BaseScaleMode.h>
#endif
HX_DECLARE_CLASS3(flixel,_hx_system,scaleModes,BaseScaleMode)
HX_DECLARE_CLASS3(flixel,_hx_system,scaleModes,StageSizeScaleMode)

namespace flixel{
namespace _hx_system{
namespace scaleModes{


class HXCPP_CLASS_ATTRIBUTES StageSizeScaleMode_obj : public  ::flixel::_hx_system::scaleModes::BaseScaleMode_obj
{
	public:
		typedef  ::flixel::_hx_system::scaleModes::BaseScaleMode_obj super;
		typedef StageSizeScaleMode_obj OBJ_;
		StageSizeScaleMode_obj();

	public:
		enum { _hx_ClassId = 0x377b85df };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="flixel.system.scaleModes.StageSizeScaleMode")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"flixel.system.scaleModes.StageSizeScaleMode"); }
		static hx::ObjectPtr< StageSizeScaleMode_obj > __new();
		static hx::ObjectPtr< StageSizeScaleMode_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~StageSizeScaleMode_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("StageSizeScaleMode","\x8e","\x24","\xb4","\x2f"); }

		void onMeasure(int Width,int Height);

};

} // end namespace flixel
} // end namespace system
} // end namespace scaleModes

#endif /* INCLUDED_flixel_system_scaleModes_StageSizeScaleMode */ 
